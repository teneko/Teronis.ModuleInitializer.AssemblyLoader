<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <Nullable>enable</Nullable>
    <RootNamespace>Teronis.ModuleInitializer.AssemblyLoader</RootNamespace>
    <Description>Provides an assembly loader injector executable that can inject IL code representing calls to foreign assembly ModuleInitializer.Initialize() methods in an target assembly that forces these foreign assembly to load AND initialize.</Description>
    <IsPackable>false</IsPackable>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="CommandLineParser" Version="2.8.0" />
    <PackageReference Include="Teronis.MSBuild.Packaging.GitVersionCache" Version="0.1.8-alpha.219">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Teronis.MSBuild.Packaging.Pack" Version="0.1.8-alpha.219">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\0\src\Teronis.ModuleInitializer.AssemblyLoader.csproj" />
  </ItemGroup>

  <ItemGroup>
    <None Include="build\**\*" PackagePath="build" Pack="true">
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </None>
    <None Include="build\**\*" PackagePath="buildMultiTargeting" Pack="true">
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </None>
  </ItemGroup>

  <!-- PROPS -->
  
  <PropertyGroup>
    <ProjectBuildInPackageVerbosity>detailed</ProjectBuildInPackageVerbosity>
    <!-- The package name and package version are inherited from project specified in PackageSourceReference. -->
    <PackSourceWhenPackingPublishTypedProjectMSBuildProperties>$(PackSourceWhenPackingPublishTypedProjectMSBuildProperties);DisableGitVersionCache=true</PackSourceWhenPackingPublishTypedProjectMSBuildProperties>
  </PropertyGroup>

  <!-- 
    Belongs to Teronis.MSBuild.Pacakging.PackExecutable
   -->
  <PropertyGroup>
    <!-- The individual path for every project. -->
    <PublishPackageOutputPath>$(PackagePublishmentsDirectory)$(MSBuildProjectName)</PublishPackageOutputPath>
    <BeforeCollectPackageSourceContextualPackagePackRelatedProperties>GetVersionCacheWhenGettingPackageTypedExecutableSourceProperties;$(BeforeCollectPackageSourceContextualPackagePackRelatedProperties)</BeforeCollectPackageSourceContextualPackagePackRelatedProperties>
  </PropertyGroup>

  <PropertyGroup>
    <PackageSourceSyntheticProjectMSBuildProperties>$(PackageSourceSyntheticProjectMSBuildProperties);DisableGitVersionCache=true</PackageSourceSyntheticProjectMSBuildProperties>
  </PropertyGroup>

  <!-- TARGETS -->
  
  <!--
  ================================================================
  GetVersionCacheWhenGettingPackageTypedExecutableSourceProperties
  
  Invokes GetVersionCache, so its evaluation is regarded when
  packing executable source project.
  ================================================================
  -->
  <Target Name="GetVersionCacheWhenGettingPackageTypedExecutableSourceProperties" DependsOnTargets="GetVersionCache" Condition="'$(ParentIsExecutablePackageTyped)' == 'true'" />
  
</Project>
