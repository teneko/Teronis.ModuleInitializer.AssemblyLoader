<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <Import Project="$(MSBuildThisFileDirectory)$(MSBuildThisFileName).props" Condition="'$(TeronisModuleInitializerAssemblyLoaderMSBuildPropsHasBeenLoaded)' != 'true'" />

  <PropertyGroup>
    <FodyDependsOnTargets>$(InjectModuleInitializerAssemblyLoaderDependsOn);InjectModuleInitializerAssemblyLoader</FodyDependsOnTargets>
    <CanInjectModuleInitializerAssemblyLoader>false</CanInjectModuleInitializerAssemblyLoader>
  </PropertyGroup>

  <Target Name="BeforeInjectModuleInitializerAssemblyLoader" />

  <Target Name="_PrintModuleInitializerAssemblyLoaderRelatedInformations" BeforeTargets="InjectModuleInitializerAssemblyLoader"
          Condition="Exists(@(IntermediateAssembly)) 
            And '$(DesignTimeBuild)' != 'true'
            And '$(DisableModuleInitializerAssemblyLoaderInjection)' != 'true'">

    <PropertyGroup>
      <_InjectionTargetAssembliesCount>@(ModuleInitializerAssemblyLoaderInjectionTargetAssemblies->Count())</_InjectionTargetAssembliesCount>
      <_InjectionTargetAssembliesEmpty Condition="'$(_InjectionTargetAssembliesCount)' == '0'">true</_InjectionTargetAssembliesEmpty>
    </PropertyGroup>

    <Message Text="There have been found $(_InjectionTargetAssembliesCount) candidates for being injected with assembly loader." Importance="normal" />
    <Message Text="- %(_ModuleInitializerAssemblyLoaderInjectionTargetAssemblies.Identity) &lt;- %(_ModuleInitializerAssemblyLoaderInjectionTargetAssemblies.SourceAssembly)"
             Importance="normal" Condition="'$(_InjectionTargetAssembliesEmpty)' != 'true'" />

  </Target>

  <!--Inputs="@(IntermediateAssembly)"
  Outputs="$(IntermediateOutputPath)$(MSBuildProjectFile).ModuleInitializerAssemblyLoader.CopyLocal.cache"-->
  <Target Name="InjectModuleInitializerAssemblyLoader"
          AfterTargets="AfterCompile"
          DependsOnTargets="BeforeInjectModuleInitializerAssemblyLoader;$(InjectModuleInitializerAssemblyLoaderDependsOn)"
          Condition="@(ModuleInitializerAssemblyLoaderInjectionTargetAssemblies->Count()) != 0
            And Exists(@(IntermediateAssembly)) 
            And '$(DesignTimeBuild)' != 'true'
            And '$(DisableModuleInitializerAssemblyLoaderInjection)' != 'true'">

    <ItemGroup>
      <_ModuleInitializerAssemblyLoaderInjectionTargetAssemblies Remove="@(ModuleInitializerAssemblyLoaderInjectionTargetAssemblies)" />

      <_ModuleInitializerAssemblyLoaderInjectionTargetAssemblies Include="@(ModuleInitializerAssemblyLoaderInjectionTargetAssemblies)">
        <FullName>%(Filename)%(Extension)</FullName>
        <SourceAssemblyFullName>$([System.IO.Path]::GetFilename(%(SourceAssembly)))</SourceAssemblyFullName>
        <Description>[$(MSBuildThisFileName)] %(_ModuleInitializerAssemblyLoaderInjectionTargetAssemblies.FullName) &lt;- %(_ModuleInitializerAssemblyLoaderInjectionTargetAssemblies.SourceAssemblyFullName)</Description>
      </_ModuleInitializerAssemblyLoaderInjectionTargetAssemblies>
    </ItemGroup>

    <Error Text="The project '$(MSBuildProjectName)' requested an assembly loader injection but the tool binary could not be found." Condition="!Exists($(AssemblyLoaderInjectorPath))" ContinueOnError="true" />
    <Error Text="%(_ModuleInitializerAssemblyLoaderInjectionTargetAssemblies.Description)" Condition="!Exists($(AssemblyLoaderInjectorPath))" />
    <Exec Command="$(AssemblyLoaderInjectorPath) inject-assembly-loader &quot;%(_ModuleInitializerAssemblyLoaderInjectionTargetAssemblies.Identity)&quot; --source-assembly-path &quot;%(_ModuleInitializerAssemblyLoaderInjectionTargetAssemblies.SourceAssembly)&quot;" />

  </Target>

</Project>